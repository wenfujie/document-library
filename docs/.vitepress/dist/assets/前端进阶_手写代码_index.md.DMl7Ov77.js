import{_ as e,c as a,o as i,a2 as t}from"./chunks/framework.Bek_Mmwg.js";const m=JSON.parse('{"title":"手撕代码","description":"","frontmatter":{},"headers":[],"relativePath":"前端进阶/手写代码/index.md","filePath":"前端进阶/手写代码/index.md"}'),o={name:"前端进阶/手写代码/index.md"},r=t('<h1 id="手撕代码" tabindex="-1">手撕代码 <a class="header-anchor" href="#手撕代码" aria-label="Permalink to &quot;手撕代码&quot;">​</a></h1><h2 id="原生函数" tabindex="-1">原生函数 <a class="header-anchor" href="#原生函数" aria-label="Permalink to &quot;原生函数&quot;">​</a></h2><ol><li><a href="./code/native-function/trim.js">trim</a></li><li><a href="./code/native-function/reduce.js">reduce</a></li><li><a href="./code/native-function/bind.js">bind</a></li><li><a href="./code/native-function/call.js">call</a></li><li><a href="./code/native-function/apply.js">apply</a></li></ol><h2 id="es6" tabindex="-1">ES6 <a class="header-anchor" href="#es6" aria-label="Permalink to &quot;ES6&quot;">​</a></h2><ol><li><a href="./code/generator.js">generator 函数</a></li><li><a href="/前端基础/js/es6/promise/介绍和实现.html">17 行代码实现简版 Promise</a></li></ol><h2 id="业务工具" tabindex="-1">业务工具 <a class="header-anchor" href="#业务工具" aria-label="Permalink to &quot;业务工具&quot;">​</a></h2><ol><li><a href="./code/eventBus.js">event bus</a></li><li><a href="./code/pipe.js">pipe（通过reduce）</a></li><li><a href="./code/runPromiseInSequence.js">Promise依次执行（通过reduce）</a></li></ol>',7),l=[r];function n(c,s,d,h,f,_){return i(),a("div",null,l)}const p=e(o,[["render",n]]);export{m as __pageData,p as default};
