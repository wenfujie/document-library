import{_ as e,c as t,o,a2 as a}from"./chunks/framework.Bek_Mmwg.js";const c="/assets/rank.fryfWLvK.jpeg",k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"前端框架/ts/介绍.md","filePath":"前端框架/ts/介绍.md"}'),r={name:"前端框架/ts/介绍.md"},s=a('<ul><li><a href="#前言">前言</a></li><li><a href="#后语">后语</a><ul><li><a href="#更多-ts-学习资料">更多 ts 学习资料</a></li></ul></li></ul><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>开发者调查分析公司 SlashData 发布了 2022 年《开发者报告》，在连续十次的调查中，JavaScript 受欢迎程度都位居第一</p><p><img src="'+c+'" alt="js rank"></p><blockquote><p><code>JS</code> ：感谢曾经瞧不起我的那些语言，打不倒我的令我更强大。</p></blockquote><p>在零几年的时候， <code>js</code> 的程序员常被 <code>Java</code> 、<code>C++</code> 的程序员瞧不上，他们认为 <code>js</code> 就是轻量的脚本语言，但也确实那时候的 <code>js</code> 能做的事寥寥无几。</p><p>现今时不同往日咦：</p><p>以前说 <code>js</code> 是弱语言，我们现在支持 <code>ts</code> ，强得很（库克：抄袭？）；</p><p>以前说 <code>js</code> 效率低写不了大工程，我们现在手持三大宝剑：<code>Vue、React、Angular</code>，30s 就能搭好一个工程，成熟的模块化多大都受得了 😎；</p><p>以前说 <code>js</code> 只能操作 <code>DOM</code>，我们现在 nodeJS 能写服务，查数据还嗷嗷快；</p><p>有感而发，<code>js</code> 真不是以前那个小老弟了，它已长成苍天大树，而前端程序员就是它的枝芽，他们相辅相成。</p><p>回观 <code>ts</code> ， <code>ts</code> 是 <code>js</code> 前行的重要一环，它改变了 <code>js</code> 是弱类型语言的定义，使得对大项目的维护变得简单也提升了开发的效率，所以 <code>ts</code> 是前端程序员必学的知识 。不知道大家是不是跟我一样对 <code>ts</code> 也是 🪴 种草已久，一段时间使用下来给我的感受是，用前膜拜 🙏，初用痛苦 😫，再用舒服 😋，再到最后巴不得所有的项目都上 <code>ts</code> 。</p><p>如果你也刚开始用 <code>ts</code> ，那千万要坚持下去，苦后才会逢甘露。</p><p>这里推荐一个在线写 <code>ts</code> 代码的网站：<a href="https://www.typescriptlang.org/zh/play" target="_blank" rel="noreferrer">TypeScript 演练场</a>，赶紧上车，开启我们的 <code>ts</code> 之旅 😎。</p><h2 id="后语" tabindex="-1">后语 <a class="header-anchor" href="#后语" aria-label="Permalink to &quot;后语&quot;">​</a></h2><p>对 <code>ts</code> 的介绍就到这，虽然篇幅介绍的内容没有很深入，但以入门来说广度还是足够的。本文旨在抛砖引玉让更多人入门 <code>ts</code> ，让我们 <code>ts</code> 社区更加活跃，<code>ts</code> 越来越规范化。</p><p>对文章内容有疑问可在评论区留言，本文如果对你有一点点帮助你的点赞 👍🏻 就是对我最大的支持， peace 🤙</p><h3 id="更多-ts-学习资料" tabindex="-1">更多 ts 学习资料 <a class="header-anchor" href="#更多-ts-学习资料" aria-label="Permalink to &quot;更多 ts 学习资料&quot;">​</a></h3><p><a href="https://github.com/xcatliu/typescript-tutorial" target="_blank" rel="noreferrer">typescript-tutorial (Star 8.9k)</a></p><p><a href="https://github.com/jkchao/typescript-book-chinese" target="_blank" rel="noreferrer">深入理解 TypeScript (Star 5.5k)</a></p><p>ts 规范，看到 clean-code ，dddd（懂的都懂）：<a href="https://github.com/labs42io/clean-code-typescript" target="_blank" rel="noreferrer">clean-code-typescript (Star 6.1k)</a></p><p><a href="https://ts.yayujs.com/" target="_blank" rel="noreferrer">TypeScript 官网翻译 （出自冴羽）</a></p><p><a href="https://github.com/joye61/typescript-tutorial" target="_blank" rel="noreferrer">TypeScript 速成教程 (Star 0.4k)</a></p>',23),d=[s];function p(l,i,n,h,_,f){return o(),t("div",null,d)}const b=e(r,[["render",p]]);export{k as __pageData,b as default};
